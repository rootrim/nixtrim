(
  deflisten workspaces
 :initial "[{id: 1, focused: true}]"
 "./services/workspaces/target/release/workspaces")









(
  defwindow bar
  :monitor 0
  :geometry (
             geometry
             :x "0%"
             :y "0%"
             :width "2.5%"
             :height "100%"
             :anchor "right center")

  :stacking "fg"
  :exclusive true
  :focusable false
  :namespace "bar"
  (centerbox
    :orientation "vertical"
    (box
     (workspace-widget
      :halign "middle"
      :valign "start"
      :class "workspace-widget"))


    (box :valign "center")


    (box
      :orientation "vertical"
      :valign "end"
      :space-evenly true
      :spaceing 4

      (systray
       :orientation "vertical")

      (metric
        :icon ' '
        :value "${round(EWW_CPU.avg, 0)}")

      (metric
        :icon ' '
        :value "${round(EWW_RAM.used_mem_perc, 0)}")

      (button-widget
        :text {formattime(EWW_TIME, "%H%n%M%n%S")}))))

(defwidget workspace-widget [?halign ?valign ?class]
 (box
  :orientation "vertical"
  :halign {halign ?: "center"}
  :valign {valign ?: "center"}
  :class {class ?: "workspace-widget"}
  (for workspace in workspaces
      (button-widget
       :command "hyprctl dispatch workspace ${workspace.id}"
       :text {workspace.name}
       :class { workspace.focused ? "workspace-button-focused" : "workspace-button"}))))




(defwidget button-widget [text ?command ?halign ?valign ?class]
  (button
    :halign {halign ?: "center"}
    :valign {valign ?: "center"}
    :class {class ?: "button"}
    :onclick "${command}"
    text))

(defwidget metric [icon value]
  (box
    :class "metric"
    :orientation "v"
    "${icon}"
    "${value}"))



